<?php
/**
 * TKIT-2 Creation of new content types to migrate the contents.
 */
function hwc_toolkit_update_7001() {
  features_revert_module('hwc_toolkit');
}

/**
 * TKIT-2 Creation of new content types to migrate the contents.
 */
function hwc_toolkit_update_7002() {
  features_revert_module('hwc_toolkit');
}

/**
 * TKIT-2 Creation of new content types to migrate the contents.
 */
function hwc_toolkit_update_7003() {
  features_revert_module('hwc_toolkit');
}

/**
 * TKIT-2 Creation of new content types to migrate the contents.
 */
function hwc_toolkit_update_7004() {
  features_revert_module('hwc_toolkit');
}

/**
 * TKIT-2 Creation of new content types to migrate the contents.
 */
function hwc_toolkit_update_7005() {
  features_revert_module('hwc_toolkit');
}

/**
 * TKIT-2 Creation of new content types to migrate the contents.
 */
function hwc_toolkit_update_7006() {
  features_revert_module('hwc_toolkit');
}

/**
 * TKIT-2 Creation of new content types to migrate the contents.
 */
function hwc_toolkit_update_7007() {
  features_revert_module('hwc_toolkit');
}

/**
 * TKIT-2 Creation of new content types to migrate the contents.
 */
function hwc_toolkit_update_7008() {
  features_revert_module('hwc_toolkit');
}

/**
 * TKIT-2 Creation of new content types to migrate the contents.
 */
function hwc_toolkit_update_7009() {
  features_revert_module('hwc_toolkit');
}

/**
 * TKIT-2 Creation of new content types to migrate the contents.
 */
function hwc_toolkit_update_7010() {
  features_revert_module('hwc_toolkit');
}

/**
 * TKIT-2 Creation of new content types to migrate the contents.
 */
function hwc_toolkit_update_7011() {
  features_revert_module('hwc_toolkit');
}

/**
 * TKIT-31 crop Examples pictures in the "Homepage" and "Tools & Examples".
 */
function hwc_toolkit_update_7012() {
  features_revert(array('hwc_toolkit' => array('field_instance')));
}

/**
 * TKIT-55 Examples carrousel: Examples Description longer than 2 lines.
 */
function hwc_toolkit_update_7013() {
  features_revert(array('hwc_toolkit' => array('field_instance')));
}

/**
 * TKIT-93 H1 hidden elements.
 */
function hwc_toolkit_update_7014() {
  features_revert(array('hwc_toolkit' => array('field_instance')));
}

/**
 * TKIT-100 SEO - Remove H2 tags from navigation elements.
 */
function hwc_toolkit_update_7015() {
  features_revert(array('hwc_toolkit' => array('views_view')));
}

/**
 * TKIT-111 Move all articles to subfolders.
 */
function hwc_toolkit_update_7016() {
  variable_set('toolkit_menu_prefix', 'tools-and-publications/campaign-toolkit/');
  hwc_update_toolkit_menu_content_links();
}

/**
 * TKIT-106 New page in Tools and Examples.
 */
function hwc_toolkit_update_7017() {
  features_revert(array('hwc_toolkit' => array('views_view', 'context', 'ds_field_settings', 'ds_layout_settings')));
}

/**
 * TKIT-112 adding a type filter in the examples search page.
 */
function hwc_toolkit_update_7018() {
  features_revert(array('hwc_toolkit' => array('views_view')));
}

/**
 * TKIT-106 New page in Tools and Examples.
 */
function hwc_toolkit_update_7019() {
  features_revert(array('hwc_toolkit' => array('views_view')));
}

/**
 * TKIT-102 Delete Campaigns general menu.
 */
function hwc_toolkit_update_7020() {
  $q = db_select('node', 'n');
  $q->fields('n', ['nid']);
  $q->condition('n.type', 'tk_tool');
  $q->condition('n.title', 'Campaigns - general');
  $col = $q->execute()->fetchCol();
  variable_set('toolkit_campaigns_general_nid', $col[0]);
}

/**
 * TKIT-106 New page in Tools and Examples.
 */
function hwc_toolkit_update_7021() {
  features_revert(array('hwc_toolkit' => array('views_view', 'context', 'field_instance')));
  variable_set('toolkit_search_toolkit_examples', 'tools-and-publications/campaign-toolkit/tools-and-examples/search-toolkit-examples');
}

/**
 * TKIT-104 Review and crop the cover picture of the examples.
 */
function hwc_toolkit_update_7022() {
  features_revert(array('hwc_toolkit' => array('field_instance', 'image')));
}

/**
 * MDR-2204 change the breadcrumb for the toolkit.
 */
function hwc_toolkit_update_7023() {
  features_revert(array('hwc_toolkit' => array('path_breadcrumbs')));
}

/**
 * HW20-208 HWC20 Development of the HWC20 CampaignToolkit.
 */
function hwc_toolkit_update_7024() {
  features_revert_module('hwc_toolkit');
}

/**
 * Search Toolkit Examples.
 */
function hwc_toolkit_update_7025() {
  features_revert(array('hwc_toolkit' => array('views_view')));
}

/**
 * HW20-481 UX: All content should be clickable.
 */
function hwc_toolkit_update_7026() {
  features_revert(array('hwc_toolkit' => array('field_instance')));
  features_revert(array('osha_news' => array('views_view')));
}

/**
 * MHWC-227 Campaign toolkit examples coherence between maximum number in the front end and backend.
 */
function hwc_toolkit_update_7027() {
  features_revert(array('hwc_toolkit' => array('views_view')));
}

/**
 * MDR-4177 Upload Campaign Toolkit translations - Job123.
 */
function hwc_toolkit_update_7028() {
  features_revert(array('hwc_toolkit' => array('views_view')));
}

/**
 * MDR-4308 Development HWC Toolkit: Absence of breadcrumb.
 */
function hwc_toolkit_update_7029() {
  features_revert(array('hwc_toolkit' => array('variable')));
}

/**
 * MDR-4308 Development HWC Toolkit: Absence of breadcrumb.
 */
function hwc_toolkit_update_7030() {
  variable_set('pathauto_update_action', 2);
  $start = 0;
  $limit_count = 50;
  $break_at = 1000;
  while (1) {
    $example = db_query("SELECT nid FROM node WHERE type='tk_example' AND status=1 LIMIT $start, $limit_count");
    foreach ($example as $result) {
      $node = node_load($result->nid);

      $q = db_select('node', 'n');
      $q->join('field_data_field_tk_examples', 'e', 'e.entity_id = n.nid');
      $q->fields('n', ['nid']);
      $q->condition('n.type', 'tk_tool');
      $q->condition('n.status', 1);
      $q->condition('e.field_tk_examples_target_id', intval($node->nid));
      $rows = $q->execute()->fetchCol();
      if ($rows) {
        $path = drupal_lookup_path('alias', 'node/' . $node->nid);
        if (strpos($path, 'tools-and-publications/campaign-toolkit/tools-and-examples') === 0) {
          continue;
        }
      }
      $node->path['pathauto'] = TRUE;
      foreach (array_keys($node->title_field) as $language) {
        pathauto_node_update_alias($node, 'update', array('language' => $language));
      }
    }
    $start += $limit_count;
    if ($start >= $break_at) {
      break;
    }
  }
  variable_set('pathauto_update_action', 0);
}
