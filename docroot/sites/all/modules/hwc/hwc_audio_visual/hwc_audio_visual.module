<?php
/**
 * @file
 * Code for the OSHA Audio Visual feature.
 */

include_once 'hwc_audio_visual.features.inc';

/**
 * Implements hook_init.
 */
function hwc_audio_visual_init() {
  $item = menu_get_object();
  if (
    (implode('_', arg()) == 'node_add_audio-visual') ||
    ($item && $item->type == 'practical_tool')
  ) {
    drupal_add_css(drupal_get_path('module', 'hwc_audio_visual') .'/css/hwc_audio_visual.css');
  }
}

function hwc_audio_visual_preprocess_views_view(&$vars) {
  $view = $vars['view'];
  if ($view->name == 'practical_tool') {
    drupal_add_css(drupal_get_path('module', 'hwc_audio_visual') .'/css/hwc_audio_visual.css');
  }
}

/**
 * Implements hook_element_info_alter.
 */
function hwc_audio_visual_element_info_alter(&$type) {
  if (isset($type['text_format']['#process'])) {
    foreach ($type['text_format']['#process'] as &$callback) {
      if ($callback === 'filter_process_format') {
        $callback = 'hwc_audio_visual_filter_process_format';
      }
    }
  }
}

// Remove guidelines and help text.
function hwc_audio_visual_filter_process_format($element) {
  $element = filter_process_format($element);
  if ((isset($element['#bundle'])) && ($element['#bundle'] == 'practical_tool')) {
    unset($element['format']['guidelines']);
    unset($element['format']['help']);
    $element['format']['format']['#options'] = ['audio_visual' => $element['format']['format']['#options']['audio_visual']];
    unset($element['format']['format']['']);
    $element['#format'] = 'audio_visual';
  }
  return $element;
}

/**
 * Implements hook_form_alter().
 */
function hwc_audio_visual_form_alter(&$form, &$form_state, $form_id) {
  if ($form_id == 'practical_tool_node_form') {
    $form['field_available_in_languages'][LANGUAGE_NONE]['#options'] = osha_sort_language_list($form['field_available_in_languages'][LANGUAGE_NONE]['#options']);

    if (!isset($form['#after_build'])) {
      $form['#after_build'] = array();
    }
    $form['#after_build'][] = '_hwc_audio_visual_form_after_build';
    // Removed, see MDR-969
    //$form['actions']['submit']['#submit'][] = 'hwc_audio_visual_node_save_redirect_submit';
    //if (isset($form['actions']['save_preview'])) {
    //  $form['actions']['save_preview']['#submit'][] = 'hwc_audio_visual_node_save_redirect_submit';
    //}
    //if (isset($form['actions']['send_for_approval'])) {
    //  $form['actions']['send_for_approval']['#submit'][] = 'hwc_audio_visual_node_save_redirect_submit';
    //}
  }
}

function _hwc_audio_visual_get_other_tid($element, $field, $other_name = 'other') {
  foreach($element[$field]['und']['#options'] as $tid => $name) {
    if (strtolower(trim($name)) == $other_name) {
      return (string)$tid;
    }
  }
  if (isset($_REQUEST['debug'])) {
    watchdog('hwc_audio_visual', '!field no other value found updated', array('!field' => $field) );
  }
  return '-1';
}

function _hwc_audio_visual_form_after_build($form, $form_state) {

  // Provider other
  foreach (element_children($form['field_fc_provider'][LANGUAGE_NONE]) as $key) {
    if (isset($form['field_fc_provider'][LANGUAGE_NONE][$key]['field_provider_type'])) {
      $_other = _hwc_audio_visual_get_other_tid($form['field_fc_provider'][LANGUAGE_NONE][$key], 'field_provider_type');
      $form['field_fc_provider'][LANGUAGE_NONE][$key]['field_type_provider_other']['#states'] = ['visible' => [ '#edit-field-fc-provider-und-' . $key . '-field-provider-type-und' => ['value' => [$_other]]]];
    }
  }

  // Country code
  $_other = _hwc_audio_visual_get_other_tid($form, 'field_country');
  $form['field_country_other']['#states'] = ['visible'=>[ '#edit-field-country-und' => ['value' => [$_other]] ] ];

  // Languages other
  $_other = _hwc_audio_visual_get_other_tid($form, 'field_available_in_languages');
  $form['field_languages_other']['#states'] = ['visible'=>[ '#edit-field-available-in-languages-und' => ['value' => [$_other]] ] ];

  // Sector / Industry covered other
  $_other = _hwc_audio_visual_get_other_tid($form, 'field_sector_industry_covered');
  $form['field_sector_industry_other']['#states'] = ['visible'=>[ '#edit-field-sector-industry-covered-und' => ['value' => [$_other]] ] ];

  // Tasks covered other
  $_other = _hwc_audio_visual_get_other_tid($form, 'field_tasks_covered');
  $form['field_tasks_other']['#states'] = ['visible'=>[ '#edit-field-tasks-covered-und' => ['value' => [$_other]] ] ];

  // Biological hazard other
  $_other = _hwc_audio_visual_get_other_tid($form, 'field_biological_hazard');
  $form['field_biological_hazard_other']['#states'] = ['visible'=>[ '#edit-field-biological-hazard-und' => ['value' => [$_other]] ] ];

  // Hazard - physical state other
  $_other = _hwc_audio_visual_get_other_tid($form, 'field_hazard_physical_state');
  $form['field_hazard_physical_other']['#states'] = ['visible'=>[ '#edit-field-hazard-physical-state-und' => ['value' => [$_other]] ] ];

  // Hazard health effect other
  $_other = _hwc_audio_visual_get_other_tid($form, 'field_hazard_health_effects');
  $form['field_hazard_health_other']['#states'] = ['visible'=>[ '#edit-field-hazard-health-effects-und' => ['value' => [$_other]] ] ];

  // Exposure route
  $_other = _hwc_audio_visual_get_other_tid($form, 'field_exposure_route');
  $form['field_exposure_route_other']['#states'] = ['visible'=>[ '#edit-field-exposure-route-und' => ['value' => [$_other]] ] ];

  // Workers groups covered other
  $_other = _hwc_audio_visual_get_other_tid($form, 'field_worker_groups_type');
  $form['field_worker_groups_other']['#states'] = ['visible'=>[ '#edit-field-worker-groups-type-und' => ['value' => [$_other]] ] ];

  // Prevention measure other
  $_other = _hwc_audio_visual_get_other_tid($form, 'field_prevention_measure_type');
  $form['field_prevention_measures_other']['#states'] = ['visible'=>[ '#edit-field-prevention-measure-type-und' => ['value' => [$_other]] ] ];

  // Purpose of the material other
  $_other = _hwc_audio_visual_get_other_tid($form, 'field_material_purpose_type');
  $form['field_material_purpose_other']['#states'] = ['visible'=>[ '#edit-field-material-purpose-type-und' => ['value' => [$_other]] ] ];

  // Target group other
  $_other = _hwc_audio_visual_get_other_tid($form, 'field_target_group');
  $form['field_target_group_other']['#states'] = ['visible'=>[ '#edit-field-target-group-und' => ['value' => [$_other]] ] ];

  return $form;
}

/**
 * Implements hook_search_api_solr_query_alter().
 */
function hwc_audio_visual_search_api_solr_query_alter(array &$call_args, SearchApiQueryInterface $query) {
  if (arg(1) == 'audio-visual') {
    $sort_order = strtolower(@$_REQUEST['sort_order']);
    $sort_by    = strtolower(@$_REQUEST['sort_by']);
    if ($sort_by) {
      $call_args['params']['sort'] = 'ds_field_publication_year ';
      if ($sort_by == 'search_api_relevance') {
        $call_args['params']['sort'] = 'ds_search_api_relevance ';
      }

      if (!in_array($sort_order, ['asc', 'desc'])) {
        $sort_order = 'desc';
      }
      $call_args['params']['sort'] .= $sort_order;
    }
  }
}

function _hwc_audio_visual_add_country_other() {

  $name = 'Other';
  $code = 'OT';

  $voc = taxonomy_vocabulary_machine_name_load('country');
  if (empty($voc)) {
    return ;
  }

  $terms = taxonomy_get_term_by_name($name, 'country');
  if (empty($terms)) {
    $term = new stdClass();
    $term->field_iso2[LANGUAGE_NONE][0]['value'] = $code;
    $term->vid = $voc->vid;
    $term->name_original = $name;
    $term->name = $name;
    taxonomy_term_save($term);
  }
}
