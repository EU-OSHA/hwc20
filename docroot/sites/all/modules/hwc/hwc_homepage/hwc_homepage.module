<?php
/**
 * @file
 * Code for the hwc_homepage feature.
 */

include_once 'hwc_homepage.features.inc';

/**
 * Implements hook_views_pre_render
 * {@inheritdoc}
 */
function hwc_homepage_views_pre_render(&$view){
  if ($view->name == 'frontpage_slider' && drupal_is_front_page()) {
    $jssor_path = libraries_get_path('jquery-slider-master');
    drupal_add_js($jssor_path . '/jssor.slider.mini.js');
    drupal_add_css($jssor_path . '/jssor.css');

    // Add "alt" attribute to images.
    foreach ($view->result as &$item) {
      if ($item->field_field_image[0]['rendered']['#item']['alt'] == NULL) {
        $item->field_field_image[0]['rendered']['#item']['alt'] = $item->field_field_image[0]['rendered']['#item']['filename'];
      }
    }
  }

  if (($view->name == 'frontpage_events') && ($view->current_display == 'block')) {
    _hwc_trim_view_results_titles($view->result);
  }
  if (($view->current_display == 'oshnews_latest') && ($view->name == 'news')) {
    _hwc_trim_view_results_titles($view->result);
  }
}

/**
 * Implements hook_block_info().
 */
function hwc_homepage_block_info() {
  $blocks = array();
  $blocks['splash_title_banner_countdown'] = array(
    'info' => t('Splash Title / Banner / Countdown'),
    'status' => 1,
    'region' => 'content',
    'visibility' => BLOCK_VISIBILITY_NOTLISTED,
    'cache' => DRUPAL_CACHE_GLOBAL,
  );

  $blocks['hwc_homepage_news_events'] = array(
    'info' => t('Homepage News / Events'),
    'status' => 1,
    'region' => 'content',
    'visibility' => BLOCK_VISIBILITY_NOTLISTED,
    'cache' => DRUPAL_CACHE_GLOBAL,
  );
  $blocks['hwc_homepage_newsletter_social'] = array(
    'info' => t('Homepage Newsletter / Social Media'),
    'status' => 1,
    'region' => 'content',
    'visibility' => BLOCK_VISIBILITY_NOTLISTED,
    'cache' => DRUPAL_CACHE_GLOBAL,
  );
  $blocks['hwc_homepage_topics'] = array(
    'info' => t('Homepage Priority areas'),
    'status' => 1,
    'region' => 'content',
    'visibility' => BLOCK_VISIBILITY_NOTLISTED,
    'cache' => DRUPAL_CACHE_GLOBAL,
  );

  $blocks['splash_download_news_campaign'] = array(
    'info' => t('Splash Download / News / Events / Previous campaigns'),
    'status' => 1,
    'region' => 'content',
    'visibility' => BLOCK_VISIBILITY_NOTLISTED,
    'cache' => DRUPAL_CACHE_GLOBAL,
  );
  $blocks['splash_browsing_content'] = array(
    'info' => t('Splash Start browsing the content'),
    'status' => 1,
    'region' => 'content',
    'visibility' => BLOCK_VISIBILITY_NOTLISTED,
    'cache' => DRUPAL_CACHE_GLOBAL,
  );
  $blocks['previous_campaign_nav'] = array(
    'info' => t('Previous campaigns navigation'),
    'status' => 1,
    'region' => 'content',
    'visibility' => BLOCK_VISIBILITY_NOTLISTED,
    'cache' => DRUPAL_CACHE_GLOBAL,
  );
  $blocks['article_nav'] = array(
    'info' => t('Article navigation'),
    'status' => 1,
    'region' => 'content',
    'visibility' => BLOCK_VISIBILITY_NOTLISTED,
    'cache' => DRUPAL_CACHE_GLOBAL,
  );
  $blocks['footer_section'] = array(
    'info' => t('Footer section'),
    'status' => 1,
    'region' => 'content',
    'visibility' => BLOCK_VISIBILITY_NOTLISTED,
    'cache' => DRUPAL_CACHE_GLOBAL,
  );

  return $blocks;
}

/**
 * Implements hook_block_configure().
 */
function hwc_homepage_block_configure($delta = '') {
  $form = array();
  if ($delta == 'hwc_homepage_topics') {
    $form['hwc_homepage_topics_message'] = array(
      '#type' => 'textarea',
      '#title' => t('Message'),
      '#description' => 'Introductory text',
      '#default_value' => variable_get('hwc_homepage_topics_message'),
    );
    $form['hwc_homepage_topics_know_more_link'] = array(
      '#type' => 'textfield',
      '#title' => t('Know more link'),
      '#description' => '“Know more” link to the main page of topics (Priority areas)',
      '#default_value' => variable_get('hwc_homepage_topics_know_more_link'),
    );
  }
  return $form;
}

/**
 * Implements hook_form_alter().
 */
function hwc_homepage_form_alter(&$form, &$form_state, $form_id) {
  if ($form_id == 'block_admin_configure'
    && !empty($form['delta']['#value'])
    && $form['delta']['#value'] == 'menu-information-tailored') {
    $form['intro_text'] = array(
      '#type' => 'textarea',
      '#title' => 'Introductive text',
      '#default_value' => variable_get('menu_information_tailored_intro_text', 'We provide information specifically for the following groups, to enable everyone to get involved in the campaign in a way that makes sense for them'),
      '#weight' => -1,
    );
    $form['#submit'][] = 'hwc_homepage_info_tailored_intro_text';
  }
}

function hwc_homepage_info_tailored_intro_text($form, &$form_state) {
  $intro_text = $form_state['values']['intro_text'];
  variable_set('menu_information_tailored_intro_text', $intro_text);
}

/**
 * Implements hook_block_save().
 */
function hwc_homepage_block_save($delta = '', $edit = array()) {
  if ($delta == 'hwc_homepage_topics') {
    variable_set('hwc_homepage_topics_message', $edit['hwc_homepage_topics_message']);
    variable_set('hwc_homepage_topics_know_more_link', $edit['hwc_homepage_topics_know_more_link']);
  }
}

/**
 * Implements hook_block_view().
 */
function hwc_homepage_block_view($delta = '') {
  $block = array();
  if ($delta == 'footer_section') {
    $data = [];
    $all_data = menu_tree_all_data('main-menu', NULL, 3);
    foreach ($all_data as $row_key => $row) {
      $new_item = $row;
      $new_item['below'] = [];
      foreach ($row['below'] as $subkey => $submenu) {
        if ($submenu['link']['hidden']) {
          continue;
        }
        $new_item['below'][$subkey] = $submenu;
      }
      if ($new_item['below']) {
        $data[$row_key] = $new_item;
      }
    }
    $block['content'] = theme('hwc_footer_section', ['data' => $data]);
  }

  if ($delta == 'previous_campaign_nav') {
    $all_data = menu_tree_all_data('main-menu');
    $active_trail = menu_get_active_trail();
    $last = end($active_trail);
    if ($last['menu_name'] != 'main-menu') {
      $last = menu_get_item();
      $last['p1'] = '';
      $last['p2'] = '';
      $last['link_path'] = $last['path'];
    }
    $prev = [];
    $next = [];
    $found = FALSE;
    foreach ($all_data as $menu2) {
      foreach ($menu2['below'] as $menu) {
        if ($last['p2'] && $menu['link']['mlid'] != $last['p2']) {
          continue;
        }
        foreach ($menu['below'] as $sub_menu) {
          if ($sub_menu['link']['hidden']) {
            continue;
          }
          if (
            !empty($sub_menu['link']['localized_options']['attributes']['target']) &&
            $sub_menu['link']['localized_options']['attributes']['target'] == '_blank'
          ) {
            continue;
          }
          if ($sub_menu['link']['mlid'] == $last['p3']) {
            $found = TRUE;
            continue;
          }
          if ($sub_menu['link']['link_path'] == $last['link_path']) {
            $found = TRUE;
            continue;
          }
          if (!$found) {
            $prev = $sub_menu['link'];
          }
          if ($found && !$next) {
            $next = $sub_menu['link'];
            break;
          }
        }
        if ($found) {
          break;
        }
      }
    }
    $markup = theme('article_navigation', ['prev' => $prev, 'next' => $next]);
    $block['content'] = array(
      '#type' => 'markup',
      '#markup' => $markup,
    );
  }
  if ($delta == 'article_nav') {
    $all_data = menu_tree_all_data('main-menu');
    $active_trail = menu_get_active_trail();
    $last = end($active_trail);
    if ($last['menu_name'] != 'main-menu') {
      $last = menu_get_item();
      $last['p1'] = '';
      $last['p2'] = '';
      $last['link_path'] = $last['path'];
    }
    $prev = [];
    $next = [];
    $found = FALSE;
    foreach ($all_data as $menu) {
      if ($last['p1'] && $menu['link']['mlid'] != $last['p1']) {
        continue;
      }
      foreach ($menu['below'] as $sub_menu) {
        if ($sub_menu['link']['hidden']) {
          continue;
        }
        if ($sub_menu['link']['mlid'] == $last['p2']) {
          $found = TRUE;
          continue;
        }
        if ($sub_menu['link']['link_path'] == $last['link_path']) {
          $found = TRUE;
          continue;
        }
        if (!$found) {
          $prev = $sub_menu['link'];
        }
        if ($found && !$next) {
          $next = $sub_menu['link'];
          break;
        }
      }
      if ($found) {
        break;
      }
    }
    $markup = theme('article_navigation', ['prev' => $prev, 'next' => $next]);
    $block['content'] = array(
      '#type' => 'markup',
      '#markup' => $markup,
    );
  }

  if ($delta == 'splash_title_banner_countdown') {
    drupal_add_js(drupal_get_path('module', 'hwc_homepage') . '/js/moment.min.js');
    drupal_add_js(drupal_get_path('module', 'hwc_homepage') . '/js/splash-page.js');
    $blocks[] = block_load('views', 'splash_banners-block');
    $array = _block_get_renderable_array(_block_render_blocks($blocks));
    $data = render($array);
    $block['content'] = theme('hwc_homepage_title_banner_countdown', ['data' => $data]);
  }

  if ($delta == 'hwc_homepage_newsletter_social') {
    $data = [];
    $newsletter = block_load('osha_newsletter', 'osha_newsletter_image');
    $array = _block_get_renderable_array(_block_render_blocks([$newsletter]));
    $data['newsletter'] = render($array);
    $social_media = module_invoke('on_the_web', 'block_view', 'on_the_web');
    $link_text = t(variable_get('homepage_social_media_link_text', 'See all from Social media'));
    $data['social_media_icons'] = render($social_media['content']);
    $data['social_media_title'] = t(variable_get('homepage_social_media_title', 'Social Media'));
    $data['social_media_intro'] = t(variable_get('homepage_social_media_intro', 'Follow us'));
    $data['social_media_see_all'] = l($link_text, 'media-centre/social-media-centre');
    $block['content'] = theme('hwc_homepage_newsletter_social_media', ['data' => $data]);
  }

  if ($delta == 'hwc_homepage_news_events') {
    $data = [];

    $news = block_load('views', 'news-front');
    $array = _block_get_renderable_array(_block_render_blocks([$news]));
    $data['news'] = render($array);

    $events = block_load('views', 'frontpage_events-front');
    $array = _block_get_renderable_array(_block_render_blocks([$events]));
    $data['events'] = render($array);

    $block['content'] = theme('hwc_homepage_news_events', ['data' => $data]);
  }
  if ($delta == 'splash_download_news_campaign') {
    $data = [];

    $download = block_load('views', 'view_campaign_materials-splash');
    $array = _block_get_renderable_array(_block_render_blocks([$download]));
    $data['download'] = render($array);

    $news = block_load('views', 'news-splash');
    $array = _block_get_renderable_array(_block_render_blocks([$news]));
    $data['news'] = render($array);

    $events = block_load('views', 'frontpage_events-splash');
    $array = _block_get_renderable_array(_block_render_blocks([$events]));
    $data['events'] = render($array);

    $campaign = block_load('views', 'splash_previous_campaigns-splash');
    $array = _block_get_renderable_array(_block_render_blocks([$campaign]));
    $data['campaign'] = render($array);

    $block['content'] = theme('hwc_homepage_download_news_events_campaign', ['data' => $data]);
  }
  if ($delta == 'splash_browsing_content') {
    $data = [];
    $all_data = menu_tree_all_data('main-menu', NULL, 3);
    foreach ($all_data as $row_key => $row) {
      $new_item = $row;
      $new_item['below'] = [];
      foreach ($row['below'] as $subkey => $submenu) {
        if ($submenu['link']['hidden']) {
          continue;
        }
        $new_item['below'][$subkey] = $submenu;
      }
      if ($new_item['below']) {
        $data[$row_key] = $new_item;
      }
    }
    $block['content'] = theme('hwc_homepage_browsing_content', ['data' => $data]);
  }
  if ($delta == 'hwc_homepage_topics') {
    $allowed = variable_get('priority_area_allowed', []);
    $voc = taxonomy_vocabulary_machine_name_load('msd_priority_area');
    $tree = taxonomy_get_tree($voc->vid, 0, NULL, TRUE);
    $items = [];
    foreach ($tree as $i => $term) {
      if (!@$term->field_available[LANGUAGE_NONE][0]['value']) {
        continue;
      }
      $w = entity_metadata_wrapper('taxonomy_term', $term->tid);
      $name = $w->label();
      $items[] = [
        'data' => l($name, 'taxonomy/term/' . $term->tid),
        'class' => ['priority_area_' . $term->tid],
        'title' => $name,
      ];
    }
    $block['content']['menu']['#markup'] = '<div class="priority_area">';
    $block['content']['menu']['#markup'] .= theme('item_list', array('items' => $items, 'attributes' => array('class' => 'menu nav')));
    $block['content']['menu']['#markup'] .= '</div>';
    $block['subject'] = l(t('Priority areas'), variable_get('hwc_homepage_topics_know_more_link'));
  }
  return $block;
}

/**
 * Implements hook_theme().
 */
function hwc_homepage_theme() {
  return array(
    'article_navigation' => array(
      'variables' => array(
        'nid' => NULL,
      ),
      'template' => 'templates/hwc_article_navigation',
    ),
    'hwc_homepage_title_banner_countdown' => array(
      'variables' => array('data' => NULL),
      'template' => 'templates/hwc_homepage_title_banner_countdown',
    ),
    'hwc_homepage_newsletter_social_media' => array(
      'variables' => array('data' => NULL),
      'template' => 'templates/hwc_homepage_newsletter_social_media',
    ),
    'hwc_homepage_news_events' => array(
      'variables' => array('data' => NULL),
      'template' => 'templates/hwc_homepage_news_events',
    ),
    'hwc_homepage_download_news_events_campaign' => array(
      'variables' => array('data' => NULL),
      'template' => 'templates/hwc_homepage_download_news_events_campaign',
    ),
    'hwc_footer_section' => array(
      'variables' => array('data' => NULL),
      'template' => 'templates/hwc_footer_section',
    ),
    'hwc_homepage_browsing_content' => array(
      'variables' => array('data' => NULL),
      'template' => 'templates/hwc_homepage_browsing_content',
    ),
  );
}

/**
 * Implements hook_panels_pane_content_alter().
 */
function hwc_homepage_panels_pane_content_alter($content, $pane, $args, $contexts) {
  if (!empty($pane->subtype) && $pane->subtype == 'menu-menu-information-tailored') {
    $intro_text = t(variable_get('menu_information_tailored_intro_text', 'We provide information specifically for the following groups, to enable everyone to get involved in the campaign in a way that makes sense for them'));
    $content->content['#prefix'] = '<p>' . $intro_text . '</p>';
  }
}

function _hwc_trim_view_results_titles(&$result) {
  $max = variable_get('trim_titles_max_len', 100);
  foreach ($result as &$row) {
    $safe_value = $row->field_title_field[0]['raw']['safe_value'];
    if (drupal_strlen($safe_value) > $max) {
      $trimmed = drupal_substr($safe_value, 0, $max) . '...';
      $row->field_title_field[0]['rendered']['#markup'] = str_replace($safe_value, $trimmed, $row->field_title_field[0]['rendered']['#markup']);
    }
  }
}
