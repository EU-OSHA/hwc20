<?php
/**
 * @file
 * Code for the HWC Priority areas feature.
 */

include_once 'hwc_priority_areas.features.inc';

define('PRIORITY_AREAS_CASE_STUDY_TID', 521);

/**
 * Implements hook_ctools_plugin_directory().
 */
function hwc_priority_areas_ctools_plugin_directory($module, $plugin) {
  if ($module == 'ctools' && !empty($plugin)) {
    return "plugins/$plugin";
  }
}

/**
 * Implements hook_node_view().
 */
function hwc_priority_areas_node_view($node, $view_mode) {
  global $language;
  if ($view_mode == 'priority_areas') {
    $node->title = NULL;
  }
  if ($node && $node->type == 'priority_area' & $view_mode == 'full') {
    $tid = @$node->field_priority_area['und'][0]['tid'];
//    if (!$tid) {
//        drupal_goto(drupal_get_path_alias('taxonomy/term/' . $tid, $language->language));
//      $tid = @$node->field_msd_priority_area['und'][0]['tid'];
//    }
  }
}

/**
 * Check if 'priority area' filter selected.
 */
function hwc_priority_areas_generate_all_facet_link($key = 'field_priority_area') {
  $url = drupal_parse_url(request_uri());
  if (isset($url['query']) && isset($url['query']['f'])) {
    foreach ($url['query']['f'] as $i => $filter) {
      if (strpos($filter, $key) === 0) {
        unset($url['query']['f'][$i]);
      }
    }
  }
  $link = l(t('All'), '/' . arg(0), array(
    'attributes' => array(
      'class' => 'facetapi-checkbox facetapi-inactive facetapi-makeCheckbox-processed facetapi-disableClick-processed',
    ),
    'query' => $url['query'],
  ));
  return $link;
}

/**
 * Check if 'priority area' filter selected.
 */
function hwc_priority_areas_is_selected_facet() {
  $url = drupal_parse_url(request_uri());
  if (isset($url['query']) && isset($url['query']['f'])) {
    foreach ($url['query']['f'] as $i => $filter) {
      if (strpos($filter, 'field_priority_area') === 0) {
        return TRUE;
      }
    }
  }
  return FALSE;
}

function hwc_priority_areas_get_priority_area_nid($tid) {
  $q = db_select('node', 'a');
  $q->fields('a', array('nid', 'vid'));
  $q->innerJoin('field_data_field_priority_area', 'fs', 'fs.entity_id = a.nid AND fs.revision_id = a.vid');
  $q->condition('a.type', 'priority_area');
  $q->condition('fs.field_priority_area_tid', $tid);
  $nids = $q->execute()->fetchCol();
  if ($nids) {
    return $nids;
  }
  $term = taxonomy_term_load($tid);

  $node = new stdClass();
  node_submit($node);
  // Do not delete/change this marker unless you know what you are doing!
  $node->title_field['en'][0]['value'] = $term->name;
  $node->field_priority_area[LANGUAGE_NONE][]['tid'] = $tid;
  $node->language = 'en';
  $node->type = 'priority_area';
  $node->uid = 0;
  $node->status = 1;
  $node->path['pathauto'] = 0;
  $node->path['alias'] = '';
  node_save($node);
  if (isset($node->nid)) {
    return array($node->nid);
  }
  else {
    return FALSE;
  }
}


/**
 * Implements hook_block_info().
 */
function hwc_priority_areas_block_info() {
  $blocks = array();
  $blocks['hwc_pa_tools_and_guidance'] = array(
    'info' => t('Priority Areas - Tools and Guidance'),
    'status' => 1,
    'region' => '-1',
    'visibility' => BLOCK_VISIBILITY_NOTLISTED,
    'cache' => DRUPAL_NO_CACHE,
  );
  $blocks['hwc_pa_case_studies'] = array(
    'info' => t('Priority Areas - Case studies'),
    'status' => 1,
    'region' => '-1',
    'visibility' => BLOCK_VISIBILITY_NOTLISTED,
    'cache' => DRUPAL_NO_CACHE,
  );
  $blocks['hwc_pa_publications'] = array(
    'info' => t('Priority Areas - Publications'),
    'status' => 1,
    'region' => '-1',
    'visibility' => BLOCK_VISIBILITY_NOTLISTED,
    'cache' => DRUPAL_NO_CACHE,
  );
  return $blocks;
}


function hwc_priority_areas_get_intro_map() {
  global $language;
  static $intro_map = [];
  if (!$intro_map) {
    $map = [
      '_case_studies_intro_' => 'field_case_studies_intro',
      '_tools_and_guidance_intro_' => 'field_tools_and_guidance_intro',
      '_publications_intro_' => 'field_publications_intro',
      '_highlights_intro_' => 'field_highlights_intro',
    ];

    $tid = arg(2);
    $nids = hwc_priority_areas_get_priority_area_nid($tid);
    $nid = $nids[0];
    $node = node_load($nid);
    $w = entity_metadata_wrapper('node', $node->nid);
    foreach ($map as $search => $field) {
      $intro_map[$search] = $w->language($language->language)->$field->value()['safe_value'];
    }
  }
  return $intro_map;
}

/*
 * Implements hook_panels_pre_render().
 */
function hwc_priority_areas_panels_pre_render($panels_display, $renderer) {
  if ($panels_display->storage_id == 'page_tools_publications__panel') {
    $panels_display->title = t('Tools and publications');
  }
}

/**
 * Implements hook_views_pre_render().
 */
function hwc_priority_areas_views_pre_render(&$view) {
  if ($view->name == 'priority_area') {
    $intro_map = hwc_priority_areas_get_intro_map();
    foreach ($intro_map as $search => $replace) {
      $view->header['area']->options['content'] = str_replace($search, $replace, $view->header['area']->options['content']);
    }
  }
}

function hwc_priority_areas_see_all($base, $text, $options = []) {
  return '<div class="more-link">' . l($text, $base, $options) . '</div>';
}

/**
 * Implements hook_block_view().
 */
function hwc_priority_areas_block_view($delta = '') {
  $relevant_for = arg(2);
  $block = array();
  $block['content'] = '';
  $node = menu_get_object();
  if ($delta == 'hwc_pa_tools_and_guidance') {
    $block['title'] = t('Tools and Guidance');
    if ($node->field_tools_and_guidance) {
      $nids = [];
      foreach($node->field_tools_and_guidance[LANGUAGE_NONE] as $row) {
        $nids[] = $row['target_id'];
      }
      if ($nids) {
        $block['content'] = hwc_priority_areas_render_nodes($nids, 'priority_areas');
        $tid = $node->field_msd_priority_area[LANGUAGE_NONE][0]['tid'];
        $text = t('See all Practical Tools');
        $base = 'tools-and-publications/practical-tools';
        $options = [];
        $options['query']['f[0]'] = 'field_msd_priority_area:' . $tid;
        $block['content'] .= hwc_priority_areas_see_all($base, $text, $options);
      }
    }
  }
  if ($delta == 'hwc_pa_case_studies') {
    $block['title'] = t('Case studies');
    if ($node->field_case_studies) {
      foreach($node->field_case_studies[LANGUAGE_NONE] as $row) {
        $nids[] = $row['target_id'];
      }
      if ($nids) {
        $block['content'] = hwc_priority_areas_render_nodes($nids, 'priority_areas');
        $tid = $node->field_msd_priority_area[LANGUAGE_NONE][0]['tid'];
        $text = t('See all Case Studies');
        $base = 'tools-and-publications/case-studies';
        $options = [
          'query' =>
            ['field_msd_priority_area[' . $tid . ']' => $tid
            ]
        ];
        $block['content'] .= hwc_priority_areas_see_all($base, $text, $options);
      }
    }
  }
  if ($delta == 'hwc_pa_publications') {
    $block['title'] = t('Publications');
    if ($node->field_publications) {
      foreach($node->field_publications[LANGUAGE_NONE] as $row) {
        $nids[] = $row['target_id'];
      }
      if ($nids) {
        $block['content'] = hwc_priority_areas_render_nodes($nids, 'priority_areas');
        $tid = $node->field_msd_priority_area[LANGUAGE_NONE][0]['tid'];
        $base = 'tools-and-publications/publications';
        $text = t('See all Publications');
        $options = [
          'query' =>
            ['field_msd_priority_area[' . $tid . ']' => $tid
            ]
        ];
        $block['content'] .= hwc_priority_areas_see_all($base, $text, $options);
      }
    }
  }
  return $block;
}

/**
 * Implements hook_entity_info_alter().
 */
function hwc_priority_areas_entity_info_alter(&$entity_info) {
  $entity_info['node']['view modes']['priority_areas'] = array(
    'label' => t('Priority Area'),
    'custom settings' => TRUE,
  );
}

function hwc_priority_areas_render_nodes($nids, $view_mode) {
  $nodes = node_load_multiple($nids);
  $items = [];
  foreach ($nodes as $node) {
    $view = node_view($node, $view_mode);
    $items[] = drupal_render($view);
  }
  return theme('item_list', array('items' => $items));
}

function hwc_priority_areas_create_priority_area_node($tid) {
  $q = db_select('node', 'a');
  $q->fields('a', array('nid', 'vid'));
  $q->innerJoin('field_data_field_msd_priority_area', 'fs', 'fs.entity_id = a.nid AND fs.revision_id = a.vid');
  $q->condition('a.type', 'priority_area');
  $q->condition('fs.field_msd_priority_area_tid', $tid);
  $nids = $q->execute()->fetchCol();
  if ($nids) {
    return $nids;
  }
  $term = taxonomy_term_load($tid);

  $node = new stdClass();
  node_submit($node);
  // Do not delete/change this marker unless you know what you are doing!
  $node->title_field['en'][0]['value'] = $term->name;
  $node->field_msd_priority_area[LANGUAGE_NONE][]['tid'] = $tid;
  $node->language = 'en';
  $node->type = 'priority_area';
  $node->uid = 0;
  $node->status = 1;
  $node->path['pathauto'] = 0;
  $node->path['alias'] = '';
  node_save($node);
  if (isset($node->nid)) {
    return array($node->nid);
  }
  else {
    return FALSE;
  }
}
